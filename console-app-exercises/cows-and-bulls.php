<?php
//Create a program that will play the “cows and bulls” game with the user. The game works like this:
//Randomly generate a 4-digit number. Ask the user to guess a 4-digit number. For every digit that
// the user guessed correctly in the correct place, they have a “cow”. For every digit the user guessed
//correctly in the wrong place is a “bull.” Every time the user makes a guess, tell them how many “cows” and “bulls”
//they have. Once the user guesses the correct number, the game is over. Keep track of the number of guesses the user
// makes throughout the game and tell the user at the end.
//Say the number generated by the computer is 1038. An example interaction could look like this:
//Welcome to the Cows and Bulls Game!
//Enter a number:
//> 1234
//2 cows, 0 bulls
//> 1256
//1 cow, 1 bull
//...
//$randNum = str_split(strval(rand(1000,9999)));
$randNum = str_split(strval(4054));
$cows=0;
$bulls=0;
$guess = readline("Enter a 4-digit number: ");

while ($guess!=$randNum)
{
    while (strlen($guess)!=4||!is_numeric($guess))
    {
        $guess = readline("Wrong input. Please try again: ");
    }
    $guess = str_split($guess);
    foreach($randNum as $key=>$digit)
    {
        if ($guess[$key] == $randNum[$key])
        {
            $cows++;
        }
        if ($guess[$key] != $randNum[$key] && in_array($guess[$key], $randNum))
        {
            $bulls++;
        }
    }
    //echo implode('',$guess).PHP_EOL;
    //echo implode('',$randNum).PHP_EOL;
    echo $cows." cow, ".$bulls." bull".PHP_EOL;

    $guess = readline("Enter a 4-digit number: ");
    $cows=0; $bulls=0;
}
echo "Congratulations. You guessed the correct number!".PHP_EOL;

